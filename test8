                                                                                                                      1 –∫–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –≤–æ –≤—Ç–æ—Ä–æ–π

// SPDX-License-Identifier: MIT

pragma solidity ^0.8.17;

library SillyStringUtils {

    struct Haiku {
        string line1;
        string line2;
        string line3;
    }

    function shruggie(string memory _input) internal pure returns (string memory) {
        return string.concat(_input, unicode" ü§∑");
    }
}



                                                                                                                        2 –∫–æ–Ω—Ç—Ä–∞–∫—Ç
      


// SPDX-License-Identifier: MIT

pragma solidity 0.8.28;

// Import the SillyStringUtils library
import "./test8.sol";

/**
 * @title ImportsExercise
 * @dev Contract to save, retrieve, and modify Haikus using the SillyStringUtils library
 */
contract ImportsExercise {
    // Use SillyStringUtils library for string manipulation
    using SillyStringUtils for string;

    // Public variable to store a Haiku struct from SillyStringUtils
    SillyStringUtils.Haiku public haiku;

    /**
     * @dev Function to save a Haiku by setting three lines of text
     * @param _line1 The first line of the Haiku
     * @param _line2 The second line of the Haiku
     * @param _line3 The third line of the Haiku
     */
    function saveHaiku(string memory _line1, string memory _line2, string memory _line3) public {
        haiku.line1 = _line1;
        haiku.line2 = _line2;
        haiku.line3 = _line3;
    }

    /**
     * @dev Function to retrieve the saved Haiku
     * @return The Haiku struct containing all three lines
     */
    function getHaiku() public view returns (SillyStringUtils.Haiku memory) {
        return haiku;
    }

    /**
     * @dev Function to add a shrugging emoji to the end of the third line of the Haiku
     * @return A copy of the Haiku struct with the modified third line
     */
    function shruggieHaiku() public view returns (SillyStringUtils.Haiku memory) {
        // Make a copy of the stored Haiku
        SillyStringUtils.Haiku memory modifiedHaiku = haiku;
        // Append the shrugging emoji to the third line using SillyStringUtils's shruggie function
        modifiedHaiku.line3 = modifiedHaiku.line3.shruggie();
        return modifiedHaiku;
    }
}


